# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
    paths:
      - sup-api/**
      - 'docker-compose.yml'
      - .github/workflows/*-api.yml
  pull_request:
    branches: [ "main" ]


jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile the project

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Compiling the project
        run: |
          cd sup-api
          mvn clean compile

#  unit-tests:
#    runs-on: ubuntu-latest
#    name: Unit tests
#
#    services:
#      postgres:
#        image: postgres:latest
#        env:
#          POSTGRES_DB: postgres
#        ports:
#          - "5432:5432"
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v4
#        with:
#          java-version: 21
#          distribution: 'temurin'
#          cache: 'maven'
#
#      - name: Set up environment variables
#        run: |
#          echo "DATABASE_URL=jdbc:postgresql://localhost:5432/postgres" >> $GITHUB_ENV
#
#      - name: Running unit tests
#        run: |
#          cd sup-api
#          mvn clean test

  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
        ports:
          - "5432:5432"

    name: Build api
    needs: [compile]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=jdbc:postgresql://localhost:5432/postgres" >> $GITHUB_ENV

      - name: Build with Maven
        run: |
          cd sup-api
          mvn clean install

  build-image:
    runs-on: ubuntu-latest
    name: Build Docker image
    needs: [build]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Extract project version
        id: extract_version
        run: |
          cd sup-api
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME}}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./sup-api
          file: ./sup-api/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ vars.DOCKERHUB_USERNAME}}/sup-api:${{ steps.extract_version.outputs.VERSION }},
                ${{ vars.DOCKERHUB_USERNAME}}/sup-api:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
